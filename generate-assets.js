
/*
✅ Cách dùng
1️⃣ Đặt file generate-assets.js ở gốc dự án.
2️⃣ Chạy:
node generate-assets.js
3️⃣ Mỗi lần thêm/xóa ảnh/icon → chạy lại!
👉 Assets.js sẽ tự update.
*/
const fs = require('fs');
const path = require('path');

// Thư mục gốc chứa images & icons
const ASSETS_DIR = path.resolve(__dirname, 'assets');
const OUTPUT_FILE = path.resolve(__dirname, 'src/utils/Assets.js');

// Helper: Tạo key chuẩn camelCase
const toCamelCase = (str) =>
  str.replace(/[-_](.)/g, (_, c) => c.toUpperCase()).replace(/\.[^/.]+$/, '');

const scanDir = (subdir) => {
  const dir = path.join(ASSETS_DIR, subdir);
  if (!fs.existsSync(dir)) return {};

  const files = fs.readdirSync(dir);
  const result = {};

  files.forEach((file) => {
    const ext = path.extname(file).toLowerCase();
    if (!['.png', '.jpg', '.jpeg', '.svg'].includes(ext)) return;

    const key = toCamelCase(path.basename(file, ext));
    const relativePath = `../../assets/${subdir}/${file}`;
    result[key] = `require('${relativePath}')`;
  });

  return result;
};

// Tạo object cho Images & Icons
const images = scanDir('images');
const icons = scanDir('icons');

// Tạo file output
const output = `
// 🚀 Generated by cmd 'node generate-assets.js' — DO NOT EDIT MANUALLY!
const Images = {
${Object.entries(images).map(([k, v]) => `  ${k}: ${v},`).join('\n')}
};

const Icons = {
${Object.entries(icons).map(([k, v]) => `  ${k}: ${v},`).join('\n')}
};

export default {
  Images,
  Icons,
};
`;

fs.mkdirSync(path.dirname(OUTPUT_FILE), { recursive: true });
fs.writeFileSync(OUTPUT_FILE, output);

console.log(`✅ Assets.js generated with ${Object.keys(images).length} images & ${Object.keys(icons).length} icons!`);
